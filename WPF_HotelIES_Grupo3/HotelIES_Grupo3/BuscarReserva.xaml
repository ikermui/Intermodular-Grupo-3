<Window x:Class="HotelIES_Grupo3.BuscarReserva"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        Icon="logo.ico"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HotelIES_Grupo3"
        mc:Ignorable="d"
        Title="Buscar Reserva" Height="960" Width="1320" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="HeaderButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="10,0,0,0"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Hover effect -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#9fa9c2"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Un estilo especial para el botón de "Cerrar sesión" -->
        <Style x:Key="LogoutButtonStyle" TargetType="Button" BasedOn="{StaticResource HeaderButtonStyle}">
            <Setter Property="Background" Value="#FF5555"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF7777"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="RadioButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">

                            <!-- Contenedor del RadioButton -->
                            <Border Width="25" Height="25"
                    CornerRadius="50"
                    BorderBrush="#1f3b91"
                    BorderThickness="3"
                    Background="Transparent">

                                <!-- Círculo interno (solo aparece si está seleccionado) -->
                                <Ellipse x:Name="Dot" 
                         Width="13" Height="13"
                         Fill="#1f3b91"
                         Opacity="0"/>
                            </Border>

                            <!-- Texto (Content) del RadioButton -->
                            <ContentPresenter Content="{TemplateBinding Content}"
                              Margin="10,0,0,0"
                              VerticalAlignment="Center"/>
                        </StackPanel>

                        <!-- Animaciones -->
                        <ControlTemplate.Triggers>
                            <!-- Cuando está seleccionado, mostrar el círculo interno -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Dot" Property="Opacity" Value="1"/>
                            </Trigger>

                            <!-- Efecto al pasar el mouse -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Dot" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Border x:Name="Border"
                        Width="30" Height="30"
                        BorderThickness="2"
                        BorderBrush="Gray"
                        Background="White"
                        Margin="0,0,5,0">
                                <Grid>
                                    <Viewbox>
                                        <Canvas Width="30" Height="30">
                                            <!-- CheckMark (V) -->
                                            <Path x:Name="CheckMark"
                                          Visibility="Collapsed"
                                          Stroke="Black" StrokeThickness="3"
                                          Data="M 6,15 L 12,22 L 24,6"
                                          Canvas.Left="0"
                                          Canvas.Top="0"/>

                                            <!-- CrossMark (X) -->
                                            <Path x:Name="CrossMark"
                                          Visibility="Collapsed"
                                          Stroke="White" StrokeThickness="3"
                                          Data="M 6,6 L 24,24 M 6,24 L 24,6"
                                          Canvas.Left="0"
                                          Canvas.Top="0"/>
                                        </Canvas>
                                    </Viewbox>
                                </Grid>
                            </Border>
                            <ContentPresenter VerticalAlignment="Center" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <!-- Cuando IsChecked es True: Aparece el check verde -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                                <Setter TargetName="CrossMark" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="Border" Property="Background" Value="LightGreen" />
                            </Trigger>
                            <!-- Cuando IsChecked es False: Aparece la X roja -->
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="CrossMark" Property="Visibility" Value="Visible" />
                                <Setter TargetName="Border" Property="Background" Value="Red" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="DatePicker">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DatePicker">
                        <Border Background="Whitesmoke" 
                        BorderBrush="LightGray" 
                        BorderThickness="1" 
                        CornerRadius="10">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="0.25*" />
                                </Grid.ColumnDefinitions>

                                <DatePickerTextBox x:Name="PART_TextBox"
                                           Background="Transparent"
                                           IsReadOnly="True"
                                           Margin="5, 0, 0, 0">
                                    <DatePickerTextBox.Template>
                                        <ControlTemplate>
                                            <Border Background="{TemplateBinding Background}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                                <TextBox x:Name="PART_TextBoxInner"
                                            IsReadOnly="True"
                                            VerticalContentAlignment="Center"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, Mode=TwoWay}"
                                            HorizontalAlignment="Left"
                                            Padding="5"/>
                                            </Border>
                                        </ControlTemplate>
                                    </DatePickerTextBox.Template>
                                </DatePickerTextBox>

                                <Button x:Name="PART_Button" 
                                Grid.Column="1"
                                Background="Transparent"
                                BorderBrush="LightGray"
                                BorderThickness="0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                    
                                Width="25"
                                Height="25"
                                Margin="5">
                                    <Image
                                       Width="20" 
                                       Height="20" 
                                       Stretch="Uniform" Source="/calendar.png"/>
                                </Button>

                                <Popup x:Name="PART_Popup" 
                               Placement="Bottom" 
                               AllowsTransparency="True">
                                    <Border Background="White" 
                                    BorderBrush="LightGray" 
                                    BorderThickness="1" 
                                    CornerRadius="5">
                                        <Calendar x:Name="PART_Calendar" />
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Border Background="Whitesmoke" 
                BorderBrush="LightGray" 
                BorderThickness="1" 
                CornerRadius="10">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="35" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter x:Name="ContentSite"
                                  Margin="5, 0, 0, 0"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Left"
                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                  Content="{TemplateBinding SelectionBoxItem}" />

                                <ToggleButton x:Name="DropDownToggle"
                              Grid.Column="1"
                              Background="Transparent"
                              BorderBrush="LightGray"
                              BorderThickness="0"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              Width="25"
                              Height="25"
                              Margin="5"
                              IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Image 
                           Width="20" 
                           Height="20" 
                           Stretch="Uniform" Source="/dropdown.png"/>
                                </ToggleButton>

                                <Popup x:Name="PART_Popup"
                       Placement="Bottom"
                       AllowsTransparency="True"
                       IsOpen="{TemplateBinding IsDropDownOpen}"
                       Focusable="False">
                                    <Border Background="White"
                            BorderBrush="LightGray"
                            BorderThickness="1"
                            Width="130"        
                            CornerRadius="10">
                                        <ScrollViewer Margin="0"
                                      SnapsToDevicePixels="True">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F3F3F3" Offset="0"/>
            <GradientStop Color="#EBEBEB" Offset="0.5"/>
            <GradientStop Color="#DDDDDD" Offset="0.5"/>
            <GradientStop Color="#CDCDCD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Border x:Name="on" Width="25" Height="25" Background="LightGray" CornerRadius="2,0,0,4" Margin="10,0,0,0">
                                <TextBlock x:Name="onText" Text="On" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <Border x:Name="off" Width="25" Height="25" Background="LightGray" CornerRadius="0,2,4,0">
                                <TextBlock x:Name="offText" Text="Off" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="on" Property="Background" Value="LightBlue"/>
                                <Setter TargetName="onText" Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="off" Property="Background" Value="LightBlue"/>
                                <Setter TargetName="offText" Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.Background>
            <RadialGradientBrush GradientOrigin="0.5,1" Center="0.5,0.6">
                <GradientStop Color="WhiteSmoke" Offset="0.5"/>
                <GradientStop Color="Gray" Offset="2"/>
            </RadialGradientBrush>
        </Grid.Background>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.5*"/>
            <ColumnDefinition Width="1.5*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.4*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1.6*"/>
        </Grid.RowDefinitions>
        <Border Grid.ColumnSpan="3" Padding="15" HorizontalAlignment="Stretch">
            <Border.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#3F7EA6" Offset="0"/>
                    <GradientStop Color="#1f3b91" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" Grid.Column="0" VerticalAlignment="Center">
                    <Border Background="LightBlue" CornerRadius="5" Margin="0,0,10,0">
                        <Image Source="/logo.png"

                       Width="Auto"
                       Stretch="Uniform"/>
        </Border>
        <StackPanel VerticalAlignment="Center"> 
                        <WrapPanel>
                            <TextBlock FontWeight="Bold" FontSize="16" Foreground="White">I</TextBlock>
                            <TextBlock FontSize="16" Foreground="White">nnovador</TextBlock>
                        </WrapPanel>
                        <WrapPanel>
                            <TextBlock FontWeight="Bold" FontSize="16" Foreground="White">E</TextBlock>
                            <TextBlock FontSize="16" Foreground="White">special</TextBlock>
                        </WrapPanel>
                        <WrapPanel>
                            <TextBlock FontWeight="Bold" FontSize="16" Foreground="White">S</TextBlock>
                            <TextBlock FontSize="16" Foreground="White">eguro</TextBlock>
                        </WrapPanel>
                    </StackPanel>
                </StackPanel>

                <!-- Sección central: Botones de navegación -->
                <StackPanel Orientation="Horizontal"
                    Grid.Column="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                    <Button Content="Buscador" Margin="0, 0, 20, 0" Style="{StaticResource HeaderButtonStyle}" Click="Button_Click"/>
                    <Button Content="Usuarios" Margin="20, 0, 20, 0" Style="{StaticResource HeaderButtonStyle}" Click="Button_Click_1"/>
                    <Button Content="Habitaciones" Margin="20, 0, 20, 0" Style="{StaticResource HeaderButtonStyle}" Click="Button_Click_4"/>
                    <Button Content="Reservas" Margin="20, 0, 0, 0" Style="{StaticResource HeaderButtonStyle}" Click="Button_Click_2"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal"
                    Grid.Column="2"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center">
                    <TextBlock x:Name="usuario"
                       FontSize="18"
                       Foreground="White"
                       VerticalAlignment="Center"
                       Margin="0,0,20,0"
                       FontWeight="Medium"/>
                    <Button Content="Cerrar sesión"
                    Style="{StaticResource LogoutButtonStyle}" Click="Button_Click_3"/>
                </StackPanel>
            </Grid>
        </Border>
        <StackPanel Grid.Row="1" Grid.ColumnSpan="3" Margin="30 30 30 0">
            <TextBlock Text="Buscador: " FontSize="48" Foreground="#1f3b91" FontWeight="Bold" Margin="0 0 0 10"/>
            <Border Background="#9fa9c2" CornerRadius="15">
                <Grid Background="Transparent" Width="Auto" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="0.75*"/>
                        <ColumnDefinition Width="0.5*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="150"/>
                    </Grid.RowDefinitions>
                    <StackPanel Margin="0 15 0 0">
                        <TextBlock Text="Huéspedes" FontSize="20" HorizontalAlignment="Center" Margin="20 10 20 0" FontWeight="Bold"/>
                        <ComboBox x:Name="huespedesComboBox" Background="Transparent" Margin="20 15 20 20" BorderThickness="1" BorderBrush="Gray" FontSize="15" VerticalAlignment="Center" Padding="10 5 5 0">
                            <ComboBoxItem Content="1"/>
                            <ComboBoxItem Content="2"/>
                            <ComboBoxItem Content="3"/>
                            <ComboBoxItem Content="4"/>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Grid.Column="1" Margin="0 25 0 0">
                        <TextBlock HorizontalAlignment="Center" FontWeight="Bold" FontSize="20">Fecha Entrada</TextBlock>
                        <DatePicker Margin="30, 15, 30, 0" FontSize="15" x:Name="fecha_inicio"></DatePicker>
                    </StackPanel>
                    <StackPanel Grid.Column="2" Margin="0 25 0 0">
                        <TextBlock HorizontalAlignment="Center" FontWeight="Bold" FontSize="20">Fecha Salida</TextBlock>
                        <DatePicker Margin="30, 15, 30, 0" FontSize="15" x:Name="fecha_final"></DatePicker>
                    </StackPanel>
                    <StackPanel Grid.Column="3" Margin="0 25 0 0" HorizontalAlignment="Center">
                        <TextBlock HorizontalAlignment="Center" FontWeight="Bold" FontSize="20">Otros Filtros</TextBlock>
                        <DockPanel Margin="20 20 10 0">
                            <CheckBox x:Name="cunaCheckBox" FontSize="15" FontWeight="Medium" IsChecked="{x:Null}" IsThreeState="True" PreviewMouseDown="CheckBox_PreviewMouseDown">Cuna</CheckBox>
                            <CheckBox x:Name="camaCheckBox" Margin="30 0 0 0" FontSize="15" IsChecked="{x:Null}" FontWeight="Medium" IsThreeState="True" PreviewMouseDown="CheckBox_PreviewMouseDown">Cama Extra</CheckBox>
                        </DockPanel>
                    </StackPanel>
                    <Border BorderThickness="1" BorderBrush="Transparent" Background="#1f3b91" CornerRadius="25" Width="150" Height="50" Margin="0 35 0 20" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="4">
                        <Button Background="Transparent" Foreground="WhiteSmoke" BorderThickness="0" FontSize="15" FontWeight="Bold" Click="filtrarHabitaciones">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="Transparent">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="Buscar"/>
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Border>
                </Grid>
            </Border>
        </StackPanel>
        <StackPanel Grid.Row="2" Grid.ColumnSpan="3" Margin="30 0 30 10">
            <DockPanel>
                <TextBlock Text="Resultados: " FontSize="48" Foreground="#1f3b91" FontWeight="Bold" HorizontalAlignment="Left"/>
                <Button Background="Transparent" BorderThickness="0" HorizontalAlignment="Right" Click="recargarHabitaciones">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Image x:Name="RecargarImage" Width="40" Margin="0 10 20 0" RenderTransformOrigin="0.5,0.5" Source="/recargar.png">
                                    <Image.RenderTransform>
                                        <RotateTransform Angle="0" />
                                    </Image.RenderTransform>
                                </Image>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="RecargarImage"
                                                    Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
                                                    From="0"
                                                    To="360"
                                                    Duration="0:0:0.5"
                                                    RepeatBehavior="1x" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </DockPanel>
            <ScrollViewer Width="Auto" Margin="30" Height="400" x:Name="scroll">
                <WrapPanel x:Name="WrapPanelResultados"/>
            </ScrollViewer>
        </StackPanel>
    </Grid>
</Window>